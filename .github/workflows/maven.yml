# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Add config.ini file
      env:
        SECRET_CONFIG: ${{ secrets.SecretConfig }}
      run: |
        echo "$SECRET_CONFIG" > ${{ github.workspace }}/config.ini

    - name: Setup test database
      uses: getong/mariadb-action@v1.1
      with:
        mysql database: 'OC4Test'
        mysql user: 'OC4'
        mysql password: ${{ secrets.DBPassword }}


    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify

    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: JUnit-report
        path: '${{ github.workspace }}/target/surefire-reports/TEST-*.xml'
        fail-on-error: false
        reporter: java-junit

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@ed72a3242c5331913886b41ca9ea66c9195ebdaa
